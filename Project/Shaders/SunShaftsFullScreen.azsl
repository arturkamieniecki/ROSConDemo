/*
* Modifications Copyright (c) Contributors to the Open 3D Engine Project.
* For complete copyright and license terms please see the LICENSE at the root of this distribution.
*
* SPDX-License-Identifier: (Apache-2.0 OR MIT) AND MIT
*
*/

#include <viewsrg.srgi>
#include <Atom/Features/SrgSemantics.azsli>
#include <Atom/Features/ColorManagement/TransformColor.azsli>
#include <Atom/RPI/Math.azsli>

ShaderResourceGroup PassSrg : SRG_PerPass
{
    Sampler LinearSampler
    {
        MinFilter = Linear;
        MagFilter = Linear;
        MipFilter = Linear;
        AddressU = Clamp;
        AddressV = Clamp;
        AddressW = Clamp;
    };

    // TODO add texture inputs
}

#include <Atom/Features/PostProcessing/FullscreenVertex.azsli> // provides MainVS vertex shader

struct PSOutput
{
    float4 m_specular : SV_Target0;
    float4 m_reflection : SV_Target1;
};


PSOutput MainPS(VSOutput IN)
{
    PSOutput OUT = (PSOutput)0;

    const float depth = 1.f; // PassSrg::m_depth.Load(Input.m_position.xy, sampleIndex).r;

    OUT.m_specular = float4(1.0,0.0,0.0,1.0);
    OUT.m_reflection = float4(1.0,0.0,0.0,1.0);

    OUT.m_specular = float4(0.0,0.0,0.0,0.0);
    OUT.m_reflection = float4(0.0,0.0,0.0,0.0);

    return OUT;
}
